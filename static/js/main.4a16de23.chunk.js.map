{"version":3,"sources":["store/index.js","styles/index.js","components/Search/index.js","components/VideoDetail/index.js","components/VideoList/Item/index.js","components/VideoList/index.js","components/AppContainer/index.js","components/ThemeSwitch/index.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","header","theme","background","padding","textAlign","content","margin","container","minHeight","spinner","iframeContainer","position","width","height","paddingBottom","iframe","top","left","borderRadius","itemTitle","color","lineHeight","itemSubtitle","listItem","cursor","detailTitle","fontSize","marginTop","detailSubtitle","search","setSearch","setSelected","Search","useEffect","input","document","querySelector","style","styles","placeholder","onSearch","value","enterButton","size","initial","useContext","Context","selected","Title","Text","Content","video","url","id","videoId","title","src","frameBorder","allow","allowFullScreen","snippet","description","data","Item","Meta","channelTitle","thumbnails","publishedAt","key","etag","onClick","avatar","medium","alt","length","slice","Date","toLocaleDateString","year","month","day","videos","itemLayout","dataSource","renderItem","item","span","offset","VideoDetail","VideoList","setTheme","float","checkedChildren","unCheckedChildren","onChange","checked","useState","youtube","setYoutube","setVideos","Header","API_KEY","process","REACT_APP_YOUTUBE","gapi","window","load","client","setApiKey","a","list","q","part","type","items","result","_onSearch","Provider","ThemeSwitch","AppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4a16de23.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext();\n","export default {\n  header: theme => {\n    return {\n      background: theme ? '#222' : '#fff',\n      padding: 10,\n      textAlign: 'center'\n    };\n  },\n  content: {\n    margin: '40px 0 20px 0'\n  },\n  container: theme => {\n    return {\n      background: theme ? '#222' : '#fff',\n      minHeight: '100vh'\n    };\n  },\n  spinner: {\n    margin: '20%'\n  },\n  iframeContainer: {\n    position: 'relative',\n    width: '100%',\n    height: 0,\n    paddingBottom: '56.25%'\n  },\n  iframe: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  },\n  itemTitle: theme => {\n    return {\n      color: theme && '#fff',\n      lineHeight: '1.2em',\n      margin: 0\n    };\n  },\n  itemSubtitle: theme => {\n    return {\n      color: theme && '#aaa',\n      margin: 0\n    };\n  },\n  listItem: {\n    cursor: 'pointer',\n    margin: '20px 0'\n  },\n  detailTitle: theme => {\n    return {\n      color: theme && '#fff',\n      fontSize: '2em',\n      marginTop: 20\n    };\n  },\n  detailSubtitle: theme => {\n    return {\n      color: theme && '#aaa'\n    };\n  },\n  search: {\n    width: '40%'\n  }\n};\n","import React, { useEffect } from 'react';\nimport { Input } from 'antd';\n\nimport styles from 'styles';\n\nexport default ({ setSearch, setSelected, theme }) => {\n  const { Search } = Input;\n\n  const _onSearch = (value) => {\n    setSelected(false);\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    const input = document.querySelector('input.ant-input');\n    if (theme) {\n      input.style.background = '#0e0d0d';\n    } else {\n      input.style.background = 'white';\n    }\n  }, [theme]);\n\n  return (\n    <Search\n      style={styles.search}\n      placeholder='Pesquisar'\n      onSearch={_onSearch}\n      enterButton\n      size='large'\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { Typography, Layout } from 'antd';\n\nimport styles from 'styles';\nimport Context from 'store';\n\nexport default ({ initial }) => {\n  const { theme, selected } = useContext(Context);\n  const { Title, Text } = Typography;\n  const { Content } = Layout;\n\n  const video = selected ? selected : initial;\n\n  const url = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n  return (\n    <>\n      <Content style={styles.iframeContainer}>\n        <iframe\n          title={video}\n          style={styles.iframe}\n          src={url}\n          frameBorder='0'\n          allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n          allowFullScreen\n        />\n      </Content>\n      <Content>\n        <Title style={styles.detailTitle(theme)}>{video.snippet.title}</Title>\n        <Text style={styles.detailSubtitle(theme)}>{video.snippet.description}</Text>\n      </Content>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { List } from 'antd';\n\nimport styles from 'styles';\nimport Context from 'store';\n\nexport default ({ data }) => {\n  const { theme, setSelected } = useContext(Context);\n  const { Item } = List;\n  const { Meta } = Item;\n\n  const { title, channelTitle, thumbnails, publishedAt } = data.snippet;\n\n  return (\n    <Item style={styles.listItem} key={data.etag} onClick={() => setSelected(data)}>\n      <Meta\n        avatar={<img width={160} src={thumbnails.medium.url} alt='thumbnail' />}\n        title={\n          <p style={styles.itemTitle(theme)}>\n            {title.length > 45 ? title.slice(0, 45) + '...' : title}\n          </p>\n        }\n        description={\n          <>\n            <p style={styles.itemSubtitle(theme)}>{channelTitle}</p>\n            <p style={styles.itemSubtitle(theme)}>\n              {new Date(publishedAt).toLocaleDateString('pt-BR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}\n            </p>\n          </>\n        }\n      />\n    </Item>\n  );\n};\n","import React from 'react';\nimport { List } from 'antd';\n\nimport Item from './Item';\n\nexport default ({ videos }) => {\n  return (\n    <List\n      itemLayout='vertical'\n      size='small'\n      dataSource={videos}\n      renderItem={item => <Item data={item} />}\n    />\n  );\n};\n","import React from 'react';\nimport { Layout, Row, Col, Spin } from 'antd';\n\nimport styles from 'styles';\nimport VideoDetail from 'components/VideoDetail';\nimport VideoList from 'components/VideoList';\n\nexport default ({ videos }) => {\n  const { Content } = Layout;\n\n  if (!videos) return <Spin style={styles.spinner} />;\n\n  return (\n    <Content style={styles.content}>\n      <Row>\n        <Col span={15} offset={1}>\n          <VideoDetail initial={videos[0]} />\n        </Col>\n        <Col span={6} offset={1}>\n          <VideoList videos={videos.slice(1)} />\n        </Col>\n      </Row>\n    </Content>\n  );\n};\n","import React from 'react';\nimport { Switch } from 'antd';\n\nexport default ({ setTheme }) => {\n  const _onChange = checked => setTheme(checked);\n\n  return (\n    <Switch\n      style={{ float: 'right' }}\n      checkedChildren='Dark'\n      unCheckedChildren='Light'\n      onChange={_onChange}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Layout } from 'antd';\n\nimport Context from 'store';\nimport Search from 'components/Search';\nimport AppContainer from 'components/AppContainer';\nimport ThemeSwitch from 'components/ThemeSwitch';\nimport styles from 'styles';\n\nexport default () => {\n  const [theme, setTheme] = useState(false);\n  const [search, setSearch] = useState('recentes');\n  const [youtube, setYoutube] = useState();\n  const [videos, setVideos] = useState();\n  const [selected, setSelected] = useState();\n\n  const { Header } = Layout;\n\n  useEffect(() => {\n    const API_KEY = process.env.REACT_APP_YOUTUBE;\n    const { gapi } = window;\n    gapi.load('client', () => {\n      gapi.client.setApiKey(API_KEY);\n      gapi.client.load('youtube', 'v3', () => {\n        setYoutube(gapi.client.youtube.search);\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!youtube) return;\n    const _onSearch = async (value) => {\n      const {\n        result: { items },\n      } = await youtube.list({ q: value, part: 'snippet', type: 'video' });\n      setVideos(items);\n    };\n    _onSearch(search);\n  }, [youtube, search]);\n\n  return (\n    <Context.Provider value={{ theme, selected, setSelected }}>\n      <Layout style={styles.container(theme)}>\n        <Header style={styles.header(theme)}>\n          <Search setSearch={setSearch} setSelected={setSelected} theme={theme} />\n          <ThemeSwitch setTheme={setTheme} />\n        </Header>\n        <AppContainer videos={videos} />\n      </Layout>\n    </Context.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}